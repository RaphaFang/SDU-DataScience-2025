NMF 限制矩陣分解的值必須 非負：
    每個 component 只能「增加」某些像素，不能抵消。
    這迫使模型學到 局部的加法組合（e.g., 笔劃、局部特徵、單字組合）。
所以 NMF 的結果就像「零件」拼湊，而 PCA 更像「方向基底」的線性組合。

為什麼 PCA 會「失效」在這個情境？
因為 影像與文字的語義結構是由局部零件構成的（像素塊、詞語群組），而不是「整體的方差方向」。
	PCA → 捕捉整體變異（global variance），可能得到奇怪的混合形狀。
	NMF → 捕捉可解釋的部分（parts-based representation），更符合人類直覺。
	PCA：找最大差異的軸，會有正負混合，結果像「疊加與抵消」 → 不直觀。
	NMF：只能用非負的疊加，結果像「零件拼湊」 → 可解釋。


feature and components_
假設我們在做電影推薦系統：
    components_ → 定義了 6 個「主題」：
	1.動作片2.愛情片3.科幻片4.喜劇片5.驚悚片6.紀錄片

	features → 告訴你某一部電影的「主題組合」：
	鐵達尼號：[0.1, 0.7, 0, 0.2, 0, 0] （主要是愛情 + 一點喜劇）
	復仇者聯盟：[0.8, 0, 0.5, 0.1, 0.2, 0] （主要是動作 + 科幻）

這時候，如果只看 components_，你知道有哪些「主題」；
但要比較《鐵達尼號》和《復仇者聯盟》有多相似，你就必須用 features。